@page "/signup"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject Frontend.Services.UserState UserState
@using System.Text.Json
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Forms
@using System.Net.Http.Json
@using Frontend.Models

<div class="row justify-content-start align-items-start">
    <div class="col-lg-6 col-12 text-left">
        <EditForm class="form" Model="signupFormModel" OnValidSubmit="@HandleSignup">
            <h3>Sign Up</h3>
            @if (!string.IsNullOrEmpty(signupError)){
                <div class="alert alert-danger">@signupError</div>
            }
            <InputText @bind-Value="signupFormModel.FirstName" placeholder="First Name" /><br>
            <InputText @bind-Value="signupFormModel.LastName" placeholder="Last Name" /><br>
            <InputText @bind-Value="signupFormModel.Email" placeholder="Email" /><br>
            <InputText @bind-Value="signupFormModel.Password" placeholder="Password" type="password" /><br>
            <button type="submit" class="btn btn-primary mt-3">Sign Up</button>
        </EditForm>
        <div class="mt-3">
            Already have an account? <a href="/login">Login</a>
        </div>
    </div>
</div>

@code{
    // Store list of users
    private List<User> users = new List<User>();
    private SignupFormModel signupFormModel = new SignupFormModel();
    private string signupError = null;

    // Load users from API
    protected override async Task OnInitializedAsync(){
        // Check if already logged in
        if (UserState.CurrentUser == null){
            await UserState.Initialize();
        }
        if (UserState.IsLoggedIn){
            NavigationManager.NavigateTo("/dashboard");
        }
        users = await Http.GetFromJsonAsync<List<User>>("https://razor-backend.up.railway.app/users");
        //users = await Http.GetFromJsonAsync<List<User>>("http://localhost:5127/users");
    }

    private async Task HandleSignup(){

        // POST a new user
        var newUser = new User{
            id = new Random().Next(1000000000, int.MaxValue),
            firstName = signupFormModel.FirstName,
            lastName = signupFormModel.LastName,
            email = signupFormModel.Email,
            password = signupFormModel.Password
        };

        var response = await Http.PostAsJsonAsync("https://razor-backend.up.railway.app/users", newUser);
        //var response = await Http.PostAsJsonAsync("http://localhost:5127/users", newUser);

        if (response.IsSuccessStatusCode){
            await UserState.Login(newUser);
            NavigationManager.NavigateTo("/dashboard");
        } else {
            signupError = $"Signup failed: {await response.Content.ReadAsStringAsync()}";
        }
    }
    
    // Model class for the signup form
    public class SignupFormModel{
        public string? FirstName { get; set; }
        public string? LastName { get; set; }
        public string? Email { get; set; }
        public string? Password { get; set; }
    }
}
